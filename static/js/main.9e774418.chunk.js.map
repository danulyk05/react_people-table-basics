{"version":3,"sources":["Pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","Pages/PeoplePage.tsx","Pages/PageNotFound.tsx","App.tsx","Root.tsx","index.tsx"],"names":["HomePage","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","to","slug","classNames","sex","name","PeopleTable","people","personSlug","useParams","selectedPerson","useMemo","find","map","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useEffect","catch","finally","peopleWithParents","element","length","NotFoundPage","App","activeClass","isActive","role","Root","path","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9e774418.chunk.js","sourcesContent":["export const HomePage: React.FC = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  </main>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype PersonLinkProps = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<PersonLinkProps> = (\n  { person },\n) => {\n  return (\n    <td>\n      <Link\n        to={`/people/${person.slug}`}\n        className={classNames({ 'has-text-danger': person.sex === 'f' })}\n      >\n        {person.name}\n      </Link>\n    </td>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useMemo } from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype PeoplePageTableProps = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<PeoplePageTableProps> = (\n  { people },\n) => {\n  const { personSlug } = useParams();\n\n  const selectedPerson = useMemo(() => {\n    return people.find(person => person.slug === personSlug);\n  }, [personSlug, people]);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': person.slug === selectedPerson?.slug,\n            })}\n          >\n            <PersonLink\n              person={person}\n            />\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            {person.mother\n              ? (\n                <PersonLink\n                  person={person.mother}\n                />\n              )\n              : (\n                <td>\n                  {person.motherName\n                    ? person.motherName : '-'}\n                </td>\n              )}\n            {person.father\n              ? (\n                <PersonLink\n                  person={person.father}\n                />\n              )\n              : (\n                <td>\n                  {person.fatherName\n                    ? person.fatherName : '-'}\n                </td>\n              )}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const peopleWithParents = useMemo(() => {\n    return people.map(person => {\n      const mother = people.find(element => element.name === person.motherName);\n      const father = people.find(element => element.name === person.fatherName);\n\n      return { ...person, mother, father };\n    });\n  }, [people]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError\n            && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n\n          {!isLoading && people?.length === 0\n            && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )}\n\n          {people.length > 0\n            && (\n              <PeopleTable people={peopleWithParents} />)}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage: React.FC = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Page not found</h1>\n    </div>\n  </main>\n);\n","import { NavLink, Outlet } from 'react-router-dom';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const App = () => {\n  const activeClass = ({ isActive }: { isActive: boolean }) => {\n    return classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    );\n  };\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            {/* need to replace a to Link */}\n            <NavLink\n              to=\"/\"\n              className={activeClass}\n            >\n              Home\n            </NavLink>\n            <NavLink\n              to=\"/people\"\n              className={activeClass}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { HomePage } from './Pages/HomePage';\nimport { PeoplePage } from './Pages/PeoplePage';\nimport { NotFoundPage } from './Pages/PageNotFound';\nimport { App } from './App';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/people\" element={<PeoplePage />} />\n          <Route path=\"/people/:personSlug\" element={<PeoplePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}