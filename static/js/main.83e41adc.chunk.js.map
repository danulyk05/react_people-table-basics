{"version":3,"sources":["Pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","Pages/PeoplePage.tsx","Pages/PageNotFound.tsx","App.tsx","Root.tsx","index.tsx"],"names":["HomePage","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","to","slug","sex","name","PeopleTable","people","personSlug","useParams","selectedPerson","find","map","undefined","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useEffect","catch","finally","peopleWithParents","element","length","NotFoundPage","App","role","isActive","classNames","Root","path","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.83e41adc.chunk.js","sourcesContent":["export const HomePage: React.FC = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  </main>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype PersonLinkProps = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<PersonLinkProps> = (\n  { person },\n) => {\n  return (\n    <td>\n      <Link\n        to={`/people/${person.slug}`}\n        className={person.sex === 'f' ? 'has-text-danger' : ''}\n      >\n        {person.name}\n      </Link>\n    </td>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype PeoplePageTableProps = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<PeoplePageTableProps> = (\n  { people },\n) => {\n  const { personSlug } = useParams();\n\n  const selectedPerson = people.find(person => person.slug === personSlug);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={person.slug === selectedPerson?.slug\n              ? 'has-background-warning' : undefined}\n          >\n            <PersonLink\n              person={person}\n            />\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            {person.mother\n              ? (\n                <PersonLink\n                  person={person.mother}\n                />\n              )\n              : (\n                <td>\n                  {person.motherName !== null\n                    ? person.motherName : '-'}\n                </td>\n              )}\n            {person.father\n              ? (\n                <PersonLink\n                  person={person.father}\n                />\n              )\n              : (\n                <td>\n                  {person.fatherName !== null\n                    ? person.fatherName : '-'}\n                </td>\n              )}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const peopleWithParents = people.map(person => {\n    const mother = people.find(element => element.name === person.motherName);\n    const father = people.find(element => element.name === person.fatherName);\n\n    return { ...person, mother, father };\n  });\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError\n            && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n\n          {!isLoading && people?.length === 0\n            && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )}\n\n          {people.length > 0\n            && (\n              <PeopleTable people={peopleWithParents} />)}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage: React.FC = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Page not found</h1>\n    </div>\n  </main>\n);\n","import { NavLink, Outlet } from 'react-router-dom';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          {/* need to replace a to Link */}\n          <NavLink\n            to=\"/\"\n            className={\n              ({ isActive }) => classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })\n            }\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/people\"\n            className={\n              ({ isActive }) => classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })\n            }\n          >\n            PeoplePage\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { HomePage } from './Pages/HomePage';\nimport { PeoplePage } from './Pages/PeoplePage';\nimport { NotFoundPage } from './Pages/PageNotFound';\nimport { App } from './App';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route\n            path=\"/\"\n            element={\n              <HomePage />\n            }\n          />\n\n          <Route\n            path=\"/people\"\n            element={\n              <PeoplePage />\n            }\n          />\n          <Route\n            path=\"/people/:personSlug\"\n            element={\n              <PeoplePage />\n            }\n          />\n\n          <Route\n            path=\"/home\"\n            element={\n              <Navigate to=\"/\" replace />\n            }\n          />\n\n          <Route\n            path=\"*\"\n            element={\n              <NotFoundPage />\n            }\n          />\n        </Route>\n\n      </Routes>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}